name: Docker 构建与推送

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'       # 例如 v1.0.0, v2.1.3
      - 'v*.*.*-*'     # 例如 v1.0.0-beta.1
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 确保获取所有标签
          
      - name: 设置 Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: 登录 Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: 登录阿里云 Docker Hub
        uses: docker/login-action@v3
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALIREGISTRY_USERNAME }}
          password: ${{ secrets.ALIREGISTRY_TOKEN }}
          
      - name: 登录 GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 获取 Docker 元数据
        id: metadata
        uses: docker/metadata-action@v5.5.1
        with:
          images: |
            docker.io/telepace/pharos
            registry.cn-hangzhou.aliyuncs.com/telepace/pharos
            ghcr.io/telepace/pharos
          tags: |
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern=v{{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            
      - name: 从标签提取版本
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
        
      - name: 构建并推送 Docker 镜像
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          build-args: |
            NEXT_PUBLIC_VERSION=${{ env.VERSION }}
            NEXT_PUBLIC_ENV=production
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: 扫描 Docker 镜像漏洞
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: telepace/pharos:${{ steps.metadata.outputs.version }}
          format: 'table'
          exit-code: '0'
          
      - name: 清理 Docker
        run: docker system prune -f